#!/bin/sh
# Give a battery name (e.g. BAT0) as an argument.

BAT="BAT0"

low_battery_audio_file="$HOME/.config/low_battery.wav"

varfile="$HOME/.vars/battery"
if [ -f "$varfile" ]; then 
	. "$varfile"
fi
[ -x $play_low_battery_sound ] && play_low_battery_sound=1;


case $BLOCK_BUTTON in
    3) pgrep -x dunst >/dev/null && notify-send "🔋 Battery module" "🔋: discharging
🛑: not charging
♻: stagnant charge
🔌: charging
⚡: charged
❗: battery very low!
- Text color reflects charge left" ;;
esac

## Get info
capacity=$(cat "/sys/class/power_supply/$1/capacity") || exit
status=$(cat "/sys/class/power_supply/"$1"/status")

# Play warning sound when unpluged-charge
[ "$status" == "discharging" ] && {
    [ $play_unpluged_sound -le 0 ] && {
		ffplay -nodisp -autoexit -t 2 $low_battery_audio_file \
				> /dev/null 2>&1 &
        play_unpluged_sound=5
    } || { play_unpluged_sound="$((play_unpluged_sound - 1))"; }
} || { play_unpluged_sound=0; }


## Play warning sound when charge is low
if [ "$capacity" -le 25 ] && [ "$status" != "Charging" ]; then
	[ $play_low_battery_sound -ge 1 ] && \ 
		ffplay -nodisp -autoexit -t 2 $low_battery_audio_file \
				> /dev/null 2>&1 &
	notify-send "❗ Battery is low $capacity"
else
	play_low_battery_sound=1
fi

# echo "play_low_battery_sound=\"$play_low_battery_sound\""  >"$varfile"
# echo "play_unpluged_sound=\"$play_unpluged_sound\"" >>"$varfile"

## Status bar info

warn=""
if   [ "$status" = "Charging" ]; then color="#ffffff"
elif [ "$capacity" -ge 75 ]; then color="#00ff00";
elif [ "$capacity" -ge 50 ]; then color="#ffffff";
elif [ "$capacity" -ge 30 ]; then color="#ffff00";
else
    color="#ff0000"; warn="❗"
fi

symbol="$(echo "$status" | sed -e "s/,//;s/Discharging/🔋/;s/Not Charging/🛑/;s/Charging/🔌 /;s/Unknown/♻️/;s/Full/⚡/;s/ 0*/ /g;s/ :/ /g")"
printf "<span color='%s'>%s%s%s</span>\n" "$color" "$symbol" "$warn" "$capacity%"

#     🔋
#  🔌 
#
