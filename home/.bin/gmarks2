#!/bin/bash

# Potetialy useful for extracting the titles:
# add something like this to the script
# pdfgrep -n '' notes.pdf | grep '^[0-9]*:[ \t]*[0-9]\.' | tr -s " " > tmp


# TODO: maybe add pdfjoin, which also combines the indexes

# Input format:
#<Level> <PageNr> <Title>
#1	1	1. Basic Notions and Notation
#1	2	2. Random Variables
#1	4	3. Expectationâ€“Integrals
#1	12	4. Lp spaces
#1	14	5. Convergence of measurable functions
#1	17	6. Independence of events and independence of random variables
#1	21	7. Classical Theorems of Probability Theory
#2	21	7.1. Law of Large Numbers.
#2	22	7.2. Central Limit Theorem.
#1	22	8. Conditional Expectation
#1	24	9. Appendix: Lebesgue measure. Caratheodory extension

otl2info() {
	awk -F "\t" '{print "BookmarkBegin"} 
				{print "BookmarkTitle: " $3}
				{print "BookmarkPageNumber: " $2+1}
				{print "BookmarkLevel: " $1}' "$1"
}

info2otl() {
	IFS=':'
	grep Bookmark "$1" | while read line; do

		# Shuld probably write some c code

		# This does not work when the title contains :
		#read -ra ADDR <<< "$line"
		#case ${ADDR[0]} in
		#		BookmarkBegin) echo "$level$pnr$title" ;;
		#		BookmarkLevel) level="${ADDR[1]}" ;;
		#		BookmarkTitle) title="${ADDR[1]}" ;;
		#		BookmarkPageNumber) pnr="${ADDR[1]}" ;;
		#		*) 
		#esac

		# This is a realy slow solution
		key=$(echo $line | cut -d':' -f1) 
		value=$( echo $line | sed "s/^.*: //" )
		case $key in
				BookmarkBegin) echo "$level$pnr$title" ;;
				BookmarkLevel) level="$value" ;;
				BookmarkTitle) title="$value" ;;
				BookmarkPageNumber) pnr="$value" ;;
				*) 
		esac
	done 
}

join() {
	echo "Combining $@"
	echo "Prosessing metadata"
	for file in "$@"; do 
		pdftk $file dump_data_utf8 > /tmp/$file.info;
	done
	python -c '
import sys; from pdf_dump import *
off=0; 
for fn in sys.argv[1:]:
    root=read_info("/tmp/%s.info" % fn); info2otl(root,pgn_off=off)
    off+=root["NumberOfPages"]
	' "$@" > /tmp/pdfjoin.otl
	otl2info /tmp/pdfjoin.otl > pdfjoin.info
	echo "Combining pdfs"
	pdfjoin --outfile /tmp/pdfjoin.pdf -- "$@"
	echo "Adding metadata"
	pdftk /tmp/pdfjoin.pdf update_info_utf8 pdfjoin.info \
				output pdfjoin.pdf

	echo "Removing tmp-files"
	for file in "$@"; do rm /tmp/$file.info; done
	rm /tmp/pdfjoin.otl; rm /tmp/pdfjoin.pdf
}


case $1 in
		o2i) otl2info "$2" ;;
		i2o) info2otl "$2" ;;
		ext) pdftk "$2" dump_data_utf8  ;;
		add) pdftk "$2" update_info_utf8 "$3" output "$2-new.pdf" 
				;;
		join) join "${@:2}" ;;
		*)  cat << EOF
pdfindex [o2i|i2o|ext|add] ...

	o2i <file.otl>: converts a .otl file to a .info file
	i2o <file.info>: converts a .info file to a .otl file
	add <file.pdf> <file.info>: Updates the meta data of a pdf.
	ext <file.pdf>: extract the meta data from a .pdf file, 
						ie. a .info file
EOF
esac

