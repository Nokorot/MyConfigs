
# Random command
RR_IR           cd "/home/noko/Source/html_to_epub"; \
                python RR_rss.py books/IR/IR.yaml -o >(read o; \
                [ -z "$o" ] \
                    && notify-send "No Update!" \
                    || { notify-send "Sending - $o"; \
                         sendToKindle "$o" | xargs notify-send; } )


click          xdotool type "player 100 login"; sleep .1; xdotool key Return; sleep .1; \
                  xdotool type "player 101 login"; sleep .1; xdotool key Return; sleep .1; \
                  xdotool type "player 102 login"; sleep .1; xdotool key Return; sleep .1; \
                  xdotool type "player 103 login"; sleep .1; xdotool key Return; sleep .1;
# click           xdotool mousedown 1; xdotool keydown w


music           lmc dmenu
yt_music_stream $TERMINAL -e 'yt_music_stream'

# Menues
nn_notes        nn_pv $NOTES
nn_unim         nn_pv $UNINOTES
nb              $HOME/.i3/scripts/ddspawn nb -pp --menu tmenu
bookmarks       bookmarks-nn
bookmarks_tmenu $HOME/.i3/scripts/ddspawn bookmarks-nn --menu tmenu


nn_books        nn -regex '.epub$' -browse -notes-dir ~/books \
          -dmargs "-width 1000 -l 22 -pv >(PVDIR=/home/noko/books ~/.bin/preview_mupdf.sh --epub)" 

unicode         $HOME/.i3/scripts/ddspawn unicode_menu # -i -w "$(get_winId)"

trash-empty     res="$(trash-empty --is-empty)" && { dm_alert "$res" } || \
                   .i3/scripts/ddspawn trash-empty
trash-restore   res="$(trash-empty --is-empty)" && { dm_alert "$res" } || \
                   .i3/scripts/ddspawn restore

%check        picom           pkill picom; sleep .1; picom --vsync --backend glx --force-win-blend \
                                         --glx-fshader-win "$(~/.config/compton/fshader.sh)"

## Run scripts
curve_brightnes ~/.bin/curve-brightnes.sh
xbrightness     printf '1.0\n.9\n.8\n.7\n.6\n.5' | dmenu | read i; \
                         [ -z "$i" ] || { xrandr --output eDP --brightness "$i"; }

gen_snipits     cd $TEMPLATES/snipits/; gen_index . > _index.json
# dl_uni          python $DROPBOX_DIR/Documents/UniMaterial/read_feed.py

## Restart Demons
#               This does not stop the mpv subprosess.
#               Could run mpv in a thread, that would be closed when proting to C.

ytpl            pkill ytpl; ytpl -s ~/LMedia/Music/*.lst

## Open config workspaces

%check* neovide   i3_config       i3 workspace i3_conf; cd ~/.i3; neovide
# ci3             i3 workspace i3_conf; cd ~/.i3; $TERMINAL

%check* neovide   dml_config      i3 workspace dml_conf; cd ~/.config/dml; neovide main
# %otherwise   vdml            i3 workspace dml_conf; cd ~/.config/dml; $TERMINAL

# i3-msg         dml -p "i3-msg" -c "$HOME/.config/dml/i3.dml"

